#!/usr/bin/env bash

set +u
# Send Variables
echo "SOURCE_BRANCH:   $SOURCE_BRANCH"
echo "SOURCE_COMMIT:   $SOURCE_COMMIT"
echo "COMMIT_MSG:      $COMMIT_MSG"
echo "DOCKER_REPO:     $DOCKER_REPO"
echo "DOCKERFILE_PATH: $DOCKERFILE_PATH"
echo "CACHE_TAG:       $CACHE_TAG"
echo "IMAGE_NAME:      $IMAGE_NAME"
echo
# Base Variable
BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%Sz')
BUILD_REF=`git rev-parse --short HEAD`
MANIF_ALL='latest'
# Branche MASTER
if [ ${SOURCE_BRANCH} = 'master' ]; then
  DOCKER_TAG="${BUILD_REF}"
  MANIF_ALL="${SOURCE_BRANCH}"
fi
# Autres branches avec tag dev
if [ ${DOCKER_TAG} = 'develop' ]; then
  DOCKER_TAG="${BUILD_REF}"
  MANIF_ALL="${SOURCE_BRANCH}"
fi
# Si on entre un tag latest
if [ ${DOCKER_TAG} = 'latest' ]; then
  DOCKER_TAG="${BUILD_REF}"
  MANIF_ALL="${SOURCE_BRANCH}"
fi
# Dans les autres cas, on prends les valeurs de DockerHub
# et on génére le manifest LATEST

# Set Image Name
IMAGE_NAME="${DOCKER_REPO}:${DOCKER_TAG}"
# DockerFile
: "${DOCKERFILE_PATH:=./Dockerfile}"
# Informations
echo "✅ Variables after applying defaults:"
echo "DOCKERFILE_PATH: $DOCKERFILE_PATH"
echo "IMAGE_NAME:      $IMAGE_NAME"
echo "MANIFEST_TAG:    $MANIF_ALL"
echo
# Path
export PATH="$PWD/docker:$PATH"
# => https://hub.docker.com/u/arm64v8/
declare -A base_image_prefix_map=( ["arm64v8"]="arm64v8/" ["arm32v5"]="arm32v5/" ["arm32v6"]="arm32v6/" ["arm32v7"]="arm32v7/" ["amd64"]="")
# => dpkg -L qemu-user-static | grep /usr/bin/
declare -A docker_qemu_arch_map=( ["arm64v8"]="aarch64" ["arm32v5"]="arm" ["arm32v6"]="arm" ["arm32v7"]="arm" ["amd64"]="x86_64")
# => https://github.com/docker/docker-ce/blob/76ac3a4952a9c03f04f26fc88d3160acd51d1702/components/cli/cli/command/manifest/util.go#L22
declare -A docker_to_manifest_map=( ["arm64v8"]="arm64" ["arm32v5"]="arm" ["arm32v6"]="arm" ["arm32v7"]="arm" ["amd64"]="amd64")
# => Variants
declare -A docker_to_variant_map=( ["arm64v8"]="v8" ["arm32v5"]="v5" ["arm32v6"]="v6" ["arm32v7"]="v7" ["amd64"]="")
# what we want to build
build_architectures=(amd64 arm32v5 arm32v7 arm64v8)
verified_build_architectures=()
# what we can build
for arch in ${build_architectures[@]}; do
  if [ -f "qemu-${docker_qemu_arch_map[${arch}]}-static" ]; then
    echo "qemu binary for $arch found";
    verified_build_architectures+=($arch)
  fi
done
# Final list
echo $verified_build_architectures
set -u

docker -v
echo
